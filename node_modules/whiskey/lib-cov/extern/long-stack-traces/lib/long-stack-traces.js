/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js']) {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'] = [];
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][1] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][2] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][4] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][6] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][7] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][8] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][11] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][12] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][13] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][14] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][15] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][16] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][17] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][18] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][21] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][25] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][28] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][29] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][33] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][34] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][35] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][36] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][38] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][39] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][43] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][46] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][48] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][50] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][52] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][56] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][57] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][62] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][64] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][65] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][66] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][67] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][73] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][74] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][75] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][77] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][78] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][79] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][83] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][88] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][89] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][90] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][92] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][96] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][125] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][126] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][127] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][128] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][130] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][131] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][133] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][136] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][137] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][138] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][139] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][140] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][142] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][143] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][146] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][149] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][151] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][154] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][155] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][156] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][157] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][158] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][159] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][161] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][162] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][163] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][164] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][165] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][166] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][167] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][168] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][169] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][174] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][175] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][177] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][178] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][179] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][180] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][181] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][182] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][183] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][184] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][185] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][186] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][187] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][188] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][191] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][193] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][194] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][195] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][196] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][198] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][199] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][201] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][202] = 0;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][204] = 0;
}
_$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][1]++;
(function (LST) {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][2]++;
  LST.rethrow = false;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][4]++;
  var currentTraceError = null;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][6]++;
  var filename = new Error().stack.split("\n")[1].match(/^    at ((?:\w+:\/\/)?[^:]+)/)[1];
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][7]++;
  function filterInternalFrames(frames) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][8]++;
    return frames.split("\n").filter((function (frame) {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][8]++;
  return frame.indexOf(filename) < 0;
})).join("\n");
}
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][11]++;
  Error.prepareStackTrace = (function (error, structuredStackTrace) {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][12]++;
  if (! error.__cachedTrace) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][13]++;
    error.__cachedTrace = filterInternalFrames(FormatStackTrace(error, structuredStackTrace));
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][14]++;
    if (! has.call(error, "__previous")) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][15]++;
      var previous = currentTraceError;
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][16]++;
      while (previous) {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][17]++;
        var previousTrace = previous.stack;
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][18]++;
        error.__cachedTrace += "\n----------------------------------------\n" + "    at " + previous.__location + "\n" + previousTrace.substring(previousTrace.indexOf("\n") + 1);
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][21]++;
        previous = previous.__previous;
}
    }
  }
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][25]++;
  return error.__cachedTrace;
});
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][28]++;
  var slice = Array.prototype.slice;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][29]++;
  var has = Object.prototype.hasOwnProperty;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][33]++;
  function wrapRegistrationFunction(object, property, callbackArg) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][34]++;
    if (typeof object[property] !== "function") {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][35]++;
      console.error("(long-stack-traces) Object", object, "does not contain function", property);
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][36]++;
      return;
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][38]++;
    if (! has.call(object, property)) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][39]++;
      console.warn("(long-stack-traces) Object", object, "does not directly contain function", property);
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][43]++;
    var sourcePosition = (object.constructor.name || Object.prototype.toString.call(object)) + "." + property;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][46]++;
    var fn = object[property];
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][48]++;
    object[property] = (function () {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][50]++;
  arguments[callbackArg] = makeWrappedCallback(arguments[callbackArg], sourcePosition);
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][52]++;
  return fn.apply(this, arguments);
});
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][56]++;
    if (object[property] === fn) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][57]++;
      console.warn("(long-stack-traces) Couldn't replace ", property, "on", object);
    }
}
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][62]++;
  function makeWrappedCallback(callback, frameLocation) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][64]++;
    var traceError = new Error();
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][65]++;
    traceError.__location = frameLocation;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][66]++;
    traceError.__previous = currentTraceError;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][67]++;
    return (function () {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][73]++;
  currentTraceError = traceError;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][74]++;
  try {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][75]++;
    return callback.apply(this, arguments);
  }
  catch (e) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][77]++;
    var stack = e.stack;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][78]++;
    e.stack = stack;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][79]++;
    throw e;
  }
  finally {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][83]++;
    currentTraceError = null;
  }
});
}
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][88]++;
  var global = (function () {
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][88]++;
  return this;
})();
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][89]++;
  wrapRegistrationFunction(global, "setTimeout", 0);
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][90]++;
  wrapRegistrationFunction(global, "setInterval", 0);
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][92]++;
  var EventEmitter = require("events").EventEmitter;
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][96]++;
  wrapRegistrationFunction(process, "nextTick", 0);
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][125]++;
  function FormatStackTrace(error, frames) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][126]++;
    var lines = [];
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][127]++;
    try {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][128]++;
      lines.push(error.toString());
    }
    catch (e) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][130]++;
      try {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][131]++;
        lines.push("<error: " + e + ">");
      }
      catch (ee) {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][133]++;
        lines.push("<error>");
      }
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][136]++;
    for (var i = 0; i < frames.length; i++) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][137]++;
      var frame = frames[i];
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][138]++;
      var line;
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][139]++;
      try {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][140]++;
        line = FormatSourcePosition(frame);
      }
      catch (e) {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][142]++;
        try {
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][143]++;
          line = "<error: " + e + ">";
        }
        catch (ee) {
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][146]++;
          line = "<error>";
        }
      }
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][149]++;
      lines.push("    at " + line);
}
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][151]++;
    return lines.join("\n");
}
  _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][154]++;
  function FormatSourcePosition(frame) {
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][155]++;
    var fileLocation = "";
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][156]++;
    if (frame.isNative()) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][157]++;
      fileLocation = "native";
    }
    else {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][158]++;
      if (frame.isEval()) {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][159]++;
        fileLocation = "eval at " + frame.getEvalOrigin();
      }
      else {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][161]++;
        var fileName = frame.getFileName();
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][162]++;
        if (fileName) {
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][163]++;
          fileLocation += fileName;
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][164]++;
          var lineNumber = frame.getLineNumber();
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][165]++;
          if (lineNumber != null) {
            _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][166]++;
            fileLocation += ":" + lineNumber;
            _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][167]++;
            var columnNumber = frame.getColumnNumber();
            _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][168]++;
            if (columnNumber) {
              _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][169]++;
              fileLocation += ":" + columnNumber;
            }
          }
        }
      }
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][174]++;
    if (! fileLocation) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][175]++;
      fileLocation = "unknown source";
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][177]++;
    var line = "";
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][178]++;
    var functionName = frame.getFunction().name;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][179]++;
    var addPrefix = true;
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][180]++;
    var isConstructor = frame.isConstructor();
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][181]++;
    var isMethodCall = ! (frame.isToplevel() || isConstructor);
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][182]++;
    if (isMethodCall) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][183]++;
      var methodName = frame.getMethodName();
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][184]++;
      line += frame.getTypeName() + ".";
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][185]++;
      if (functionName) {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][186]++;
        line += functionName;
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][187]++;
        if (methodName && (methodName != functionName)) {
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][188]++;
          line += " [as " + methodName + "]";
        }
      }
      else {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][191]++;
        line += methodName || "<anonymous>";
      }
    }
    else {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][193]++;
      if (isConstructor) {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][194]++;
        line += "new " + (functionName || "<anonymous>");
      }
      else {
        _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][195]++;
        if (functionName) {
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][196]++;
          line += functionName;
        }
        else {
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][198]++;
          line += fileLocation;
          _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][199]++;
          addPrefix = false;
        }
      }
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][201]++;
    if (addPrefix) {
      _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][202]++;
      line += " (" + fileLocation + ")";
    }
    _$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'][204]++;
    return line;
}
})(typeof exports !== "undefined"? exports: {});
_$jscoverage['extern/long-stack-traces/lib/long-stack-traces.js'].source = ["(function(LST) {","    LST.rethrow = false;","","    var currentTraceError = null;","","    var filename = new Error().stack.split(\"\\n\")[1].match(/^    at ((?:\\w+:\\/\\/)?[^:]+)/)[1];","    function filterInternalFrames(frames) {","        return frames.split(\"\\n\").filter(function(frame) { return frame.indexOf(filename) &lt; 0; }).join(\"\\n\");","    }","","    Error.prepareStackTrace = function(error, structuredStackTrace) {","        if (!error.__cachedTrace) {","            error.__cachedTrace = filterInternalFrames(FormatStackTrace(error, structuredStackTrace));","            if (!has.call(error, \"__previous\")) {","                var previous = currentTraceError;","                while (previous) {","                    var previousTrace = previous.stack;","                    error.__cachedTrace += \"\\n----------------------------------------\\n\" +","                        \"    at \" + previous.__location + \"\\n\" +","                        previousTrace.substring(previousTrace.indexOf(\"\\n\") + 1);","                    previous = previous.__previous;","                }","            }","        }","        return error.__cachedTrace;","    }","","    var slice = Array.prototype.slice;","    var has = Object.prototype.hasOwnProperty;","","    // Takes an object, a property name for the callback function to wrap, and an argument position","    // and overwrites the function with a wrapper that captures the stack at the time of callback registration","    function wrapRegistrationFunction(object, property, callbackArg) {","        if (typeof object[property] !== \"function\") {","            console.error(\"(long-stack-traces) Object\", object, \"does not contain function\", property);","            return;","        }","        if (!has.call(object, property)) {","            console.warn(\"(long-stack-traces) Object\", object, \"does not directly contain function\", property);","        }","","        // TODO: better source position detection","        var sourcePosition = (object.constructor.name || Object.prototype.toString.call(object)) + \".\" + property;","","        // capture the original registration function","        var fn = object[property];","        // overwrite it with a wrapped registration function that modifies the supplied callback argument","        object[property] = function() {","            // replace the callback argument with a wrapped version that captured the current stack trace","            arguments[callbackArg] = makeWrappedCallback(arguments[callbackArg], sourcePosition);","            // call the original registration function with the modified arguments","            return fn.apply(this, arguments);","        }","","        // check that the registration function was indeed overwritten","        if (object[property] === fn)","            console.warn(\"(long-stack-traces) Couldn't replace \", property, \"on\", object);","    }","","    // Takes a callback function and name, and captures a stack trace, returning a new callback that restores the stack frame","    // This function adds a single function call overhead during callback registration vs. inlining it in wrapRegistationFunction","    function makeWrappedCallback(callback, frameLocation) {","        // add a fake stack frame. we can't get a real one since we aren't inside the original function","        var traceError = new Error();","        traceError.__location = frameLocation;","        traceError.__previous = currentTraceError;","        return function() {","            // if (currentTraceError) {","            //     FIXME: This shouldn't normally happen, but it often does. Do we actually need a stack instead?","            //     console.warn(\"(long-stack-traces) Internal Error: currentTrace already set.\");","            // }","            // restore the trace","            currentTraceError = traceError;","            try {","                return callback.apply(this, arguments);","            } catch (e) {","                var stack = e.stack;","                e.stack = stack;","                throw e;","            } finally {","                // clear the trace so we can check that none is set above.","                // TODO: could we remove this for slightly better performace?","                currentTraceError = null;","            }","        }","    }","","    var global = (function() { return this; })();","    wrapRegistrationFunction(global, \"setTimeout\", 0);","    wrapRegistrationFunction(global, \"setInterval\", 0);","","    var EventEmitter = require('events').EventEmitter;","    //wrapRegistrationFunction(EventEmitter.prototype, \"addListener\", 1);","    //wrapRegistrationFunction(EventEmitter.prototype, \"on\", 1);","","    wrapRegistrationFunction(process, \"nextTick\", 0);","","    // Copyright 2006-2008 the V8 project authors. All rights reserved.","    // Redistribution and use in source and binary forms, with or without","    // modification, are permitted provided that the following conditions are","    // met:","    //","    //     * Redistributions of source code must retain the above copyright","    //       notice, this list of conditions and the following disclaimer.","    //     * Redistributions in binary form must reproduce the above","    //       copyright notice, this list of conditions and the following","    //       disclaimer in the documentation and/or other materials provided","    //       with the distribution.","    //     * Neither the name of Google Inc. nor the names of its","    //       contributors may be used to endorse or promote products derived","    //       from this software without specific prior written permission.","    //","    // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS","    // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT","    // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR","    // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT","    // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,","    // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT","    // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,","    // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY","    // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","    // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","    // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","","    function FormatStackTrace(error, frames) {","      var lines = [];","      try {","        lines.push(error.toString());","      } catch (e) {","        try {","          lines.push(\"&lt;error: \" + e + \"&gt;\");","        } catch (ee) {","          lines.push(\"&lt;error&gt;\");","        }","      }","      for (var i = 0; i &lt; frames.length; i++) {","        var frame = frames[i];","        var line;","        try {","          line = FormatSourcePosition(frame);","        } catch (e) {","          try {","            line = \"&lt;error: \" + e + \"&gt;\";","          } catch (ee) {","            // Any code that reaches this point is seriously nasty!","            line = \"&lt;error&gt;\";","          }","        }","        lines.push(\"    at \" + line);","      }","      return lines.join(\"\\n\");","    }","","    function FormatSourcePosition(frame) {","      var fileLocation = \"\";","      if (frame.isNative()) {","        fileLocation = \"native\";","      } else if (frame.isEval()) {","        fileLocation = \"eval at \" + frame.getEvalOrigin();","      } else {","        var fileName = frame.getFileName();","        if (fileName) {","          fileLocation += fileName;","          var lineNumber = frame.getLineNumber();","          if (lineNumber != null) {","            fileLocation += \":\" + lineNumber;","            var columnNumber = frame.getColumnNumber();","            if (columnNumber) {","              fileLocation += \":\" + columnNumber;","            }","          }","        }","      }","      if (!fileLocation) {","        fileLocation = \"unknown source\";","      }","      var line = \"\";","      var functionName = frame.getFunction().name;","      var addPrefix = true;","      var isConstructor = frame.isConstructor();","      var isMethodCall = !(frame.isToplevel() || isConstructor);","      if (isMethodCall) {","        var methodName = frame.getMethodName();","        line += frame.getTypeName() + \".\";","        if (functionName) {","          line += functionName;","          if (methodName &amp;&amp; (methodName != functionName)) {","            line += \" [as \" + methodName + \"]\";","          }","        } else {","          line += methodName || \"&lt;anonymous&gt;\";","        }","      } else if (isConstructor) {","        line += \"new \" + (functionName || \"&lt;anonymous&gt;\");","      } else if (functionName) {","        line += functionName;","      } else {","        line += fileLocation;","        addPrefix = false;","      }","      if (addPrefix) {","        line += \" (\" + fileLocation + \")\";","      }","      return line;","    }","})(typeof exports !== \"undefined\" ? exports : {});"];
